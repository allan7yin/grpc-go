syntax = "proto3";
package user;
option go_package = "./proto";

service UserService {
  // rpc unary 
  rpc Create(CreateUserRequest) returns (UserProfileResponse);
  rpc Read(SingleUserRequest) returns (UserProfileResponse);
  rpc Update(UpdateUserRequest) returns (SuccessResponse);
  rpc Delete(SingleUserRequest) returns (SuccessResponse);

  // rpc server-side streaming
  rpc ReadMultiUsers(MultiUsersRequest) returns (stream UserProfileResponse);

  // rpc client-side streaming 
  rpc MultiUpdate(stream UpdateUserRequest) returns (SuccessResponse);

  // rpc bidirectional streaming 
  // for practce, this will be, stream of user creation requests, and response of stream of users (impractical, for learning purpose)
  rpc CreateUsersOneByOne(stream CreateUserRequest) returns (stream UserProfileResponse);
}

message CreateUserRequest{
  string name = 1;
  string email = 2;
}

message SingleUserRequest{
  string id = 1;
}

message MultiUsersRequest {
  repeated string id = 1;
}

message UserProfileResponse{
  string id = 1;
  string name = 2;
  string email = 3;
}

message SuccessResponse{
  string response = 1;
}

message UpdateUserRequest{
  string id = 1;
  string name = 2;
}